unit DataView;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, Menus, ActnList, StdCtrls, ExtCtrls, Grids, ValEdit, ComCtrls,
  Jpeg;

type

  private
    { Private declarations }

  public
    { Public declarations }

    procedure ReadMapPoints;

  end;

implementation

procedure ReadMapPoints;
var
  i : integer;
  F : TextFile;
  S : string;
  G, G1,G2,G3,G4 : string;
  j : integer;

begin

// Open a FIle and read its input and build the array with MapPoints

  AssignFile (F, 'C:\TestFile.txt');
  Reset(F);

  while not Eof(F) do
  begin
    Readln(F, S);

    // Read the line for ;

    G  := '';
    G1 := '';
    G2 := '';
    G3 := '';
    G4 := '';
    j := 0;

    for i := 0 to Length(S) do
      begin
        if S[i] = ';' then
          begin
            case j of
              0: G1 := G;
              1: G2 := G;
              2: G3 := G;
              3: G4 := G;
              4:
                begin

                  MapPoints[MapPointsLen].Obj := G1;
                  MapPoints[MapPointsLen].X := StrToInt(G2);
                  MapPoints[MapPointsLen].Y := StrToInt(G3);
                  MapPoints[MapPointsLen].W := StrToInt(G4);
                  MapPoints[MapPointsLen].Desc := G;
                  MapPointsLen := MapPointsLen + 1;

                end;
            end;
            j := j + 1;
            G := '';
          end
        else
          begin
            if S[i] >= ' ' then
              G := G + S[i];
          end;
      end;

  end;

  CloseFile(F);
end;

end.
